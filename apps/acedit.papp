<!--
   access rights editor
   requires "admin" priviledges
-->

<papp name="acedit" lang="en">

<language lang="en" desc="English"/>
<language lang="de" desc="Deutsch"/>

<import src="macro/util"/>
<import src="macro/editform"/>

<callback type="request"><perl><![CDATA[
   $PApp::SQL::DBH = $PApp::statedbh;
]]></perl></callback>

<macro name="page(&amp;)" args="$body"><phtml><![CDATA[
<:
   access_page "admin", __"Access-Editor", sub {
      :>
         <h1>__"Access-Editor"</h1>
#if retlink_p
         <?retlink __"[BACK]":><p>
#endif
      <:
      &$body;
   }
:>
]]></phtml></macro>

<state keys="search" import="yes"/>
<phtml><![CDATA[
<:page {:>
   <:$S{search} = "_" unless defined $S{search}:>

   <:my ($cnt) = sql_fetch "select count(*) from user":>
   __"There are currently $cnt users in the database."
   <ul>
   <li><?sform:>__"Search username/comment:" <?textfield "search", value => $S{search}:><?endform:>
   </ul>

   __"To see all users, enter nothing in the 'Search' entry"<br>
   __"To see only registered users, enter a single underscore in the 'Search' entry"<p>

   <:
      my $st = sql_exec \my($id, $user, $pass, $comment),
                        "select id, user, pass, comment
                         from user
                         where user like ? or comment like ?",
                         ("%$S{search}%")x2;
   :>
   <table rules=all frame=box border=1>
   <tr><th>ID<th>login<th>password<th>comment<th>&nbsp;
   <: while ($st->fetch) {
         $comment ||= "&nbsp;"
         ?>
            <tr><td>$id<td>$user<td>$pass<td><?substr $comment, 0, 20?>
                <td><?slink __"[EDIT]", "edit", userid => $id:>
         <:
         my $st = sql_exec \my($access), "select g.name from usergrp u, grp g where u.grpid = g.id and userid = ?", $id;
         while ($st->fetch) {
            ?><td>$access<:
         }
      }
   :>
   </table>
<:}:>
]]></phtml>

<module name="edit">
<state keys="userid" local="yes"/>
<phtml><![CDATA[
<:page {:>
   <?slink __"Go Back", "":><p>

#if $A{delete_grp}
   <:sql_exec "delete from usergrp where userid = ? and grpid = ?", $S{userid}, $A{delete_grp}:>
#endif
#if $A{add_grp}
   <:sql_exec "replace into usergrp values (?, ?)", $S{userid}, $P{grpid}:>
#endif
   <:ef_begin "user", ["id", $S{userid}]:>
   <:
     sql_fetch \my($user, $pass, $comment),
               "select user, pass, comment from user where id = ?",
               $S{userid};
   :>
   <table>
   <tr><td>User</td><td><:ef_string $user, "user", 20:>
   <tr><td>Pass</td><td><:ef_string $pass, "pass", 14:>
   <tr><td>Comment</td><td><:ef_text $comment, "comment", 60, 8:>
   <:
      my $st = sql_exec \my($id, $name),
                        "select g.id, g.name from usergrp u, grp g where u.grpid = g.id and userid = ?",
                        $S{userid};
      while ($st->fetch) {
         ?>
            <tr><td>Group:</td><td>$name <?slink __"[DELETE]", -delete_grp => $id:>
         <:
      }
   :>
   <tr><td><td><:ef_submit:><:ef_reset:>
   </table>
   <:ef_end:>
   __"Add Group:"
      <?sform -add_grp => 1:>
      <select name=grpid>
      <:
         my $st = sql_exec \my($id, $name),
                           "select id, name from grp";
         while ($st->fetch) {
            ?><option value=$id>$name</option><:
         }
      :>
      </select>
      <?submit "add", "add":>
      <?endform:>
<:}:>
]]></phtml></module>

</papp>

