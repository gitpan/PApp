<package name="xcms"><domain lang="eng">

<domain lang="deu"/>

<translate fields="content.text style.text" style="auto" lang="*"/>

<import src="macro/editform"/>
<import pm="PApp::UserObs"/>
<import src="macro/admin"/>
<import pm="PApp::ECMAScript"/>
<import src="simple-edit/simple-edit"/>

<perl><![CDATA[
   use PApp::XSLT;
   use PApp::PCode qw(pcode2perl pxml2pcode);
   use Convert::Scalar ':utf8';
]]></perl>

<callback type="request"><perl><![CDATA[
   # this hack is here to enable us to display
   # the components of specific pages
   if ($PApp::stateid != $xcms_laststate) {
      @xcms_viewed = ();
      $xcms_laststate = $PApp::stateid;
   }
]]></perl></callback>

<macro name="cins" args="$name"><phtml><![CDATA[<:
   sql_fetch \my($mtime, $content, $style),
              "select unix_timestamp(mtime), text, style from content where name = ?",
              $name;
   die "No such page: $name" unless $content;
   push @xcms_viewed, $name;
   $content = capture {
      eval pcode2perl pxml2pcode utf8_on $content;
      die if $@;
   };
   if ($style) {
      sql_fetch \$style,
                 "select text from style where id = ?",
                 $style;
      $style = capture {
         eval pcode2perl pxml2pcode utf8_on $style;
         die if $@;
      };
      $style = new PApp::XSLT stylesheet => "data:,$style";
      $content = $style->apply_string("<content page='$name'>$content</content>");
   }
   :><?$content:><:
:>]]></phtml></macro>

<module name="*"><perl><![CDATA[
   cins $PApp::module || "default";
]]></perl></module>

<module name="edit">
<phtml><![CDATA[
<:access_p "admin" or force_login __"admin access required":>
<html>
<:for $table ("content", "style") {:>

   <?ef_begin "edit_row", -table => $table:>
      <?$table:>
      <?
         ef_relation \$S{edit_id},
                     ["id, name from $table order by 1"],
                     0 => __"[NEW]";
      :>
   <?ef_submit __"Go":>
   <?ef_submit __"Blubb", -blubb => 1:>
   <?ef_end:>

<:}:>
</html>
]]></phtml></module>

<module name="edit_row" nosession="edit">
<state keys="edit_table edit_id" local="yes"/>
<state keys="edit_client" preferences="yes"/>
<phtml><![CDATA[
<html>

<?slink __"[CANCEL/BACK]", "edit":>

<:
   $row = $A{row}
      || new PApp::DataRef 'DB_row',
                           table      => $A{table},
                           where      => [id => $S{edit_id}],
                           preload    => 1,
                           autocommit => 0,
                           delay      => 1,
                           utf8       => 1,
:>

#if $S{edit_client}

<?slink __"[NORMAL EDIT]", edit_client => undef, -row => $row:>

<p>

<:$row->flush:>
<:$row->invalidate:>

#if $A{blubb}
<:abort_to "edit_client", -row => $row:>
#endif

<ol>
<li><?slink __"edit file on client", "edit_client", -row => $row:></li>
<li>__"leave editor, this will upload your changes"</li>
<li>__"if necessary, repeat step 1."</li>
</ol>

</p>

<p>__"To install the client-side editor, edit your <tt>/etc/mailcap</tt>
or <tt>$HOME/.mailcap</tt> file and add this line:"</p>

<tt>application/x-papp-edit; /path/to/PApp/simple-edit/x-papp-edit %s</tt>

<p>__"You can edit this file in Netscape, too, under Preferences => Navigator => Applications => New."</p>

#else

<?slink __"[CLIENT SIDE EDIT]", edit_client => 1, -row => $row:>

<?ef_begin -row => $row:>
<?ef_submit __"Save", -save => 1:><br />
<?ef_submit __"Delete", -discard => 1:><br />
<?ef_string \$row->{name}, 60:><br />
#if exists $row->{style}
<?ef_relation \$row->{style},
              ["id, name from style order by 1"],
              0 => __"[NONE]":><br />
#endif
<?ef_text \$row->{text}, 80:><br />
<?ef_end:>

#if $A{save}
<:$row->{mtime} = undef:>
<:$row->flush:>
#endif
#if $A{discard}
<:$row->delete:>
<:abort_to "edit":>
#endif

#endif

</html>
]]></phtml></module>

<module name="edit_client"><perl><![CDATA[
   if ($A{save}) {
      $A{row}{mtime} = undef;
      $A{row}{text} = remote_edit_parse;
      $A{row}->flush;
      content_type "text/plain";
      echo "document \"$A{row}{name}\" updated\n";
   } else {
      remote_edit $A{row}{text}, ".papp", "edit_client", -row => $A{row}, -save => 1;
   }
]]></perl></module>

</domain></package>

