
# optional status module not yet hooked into, though :(
#PerlModule Apache::Status

# this loads the apache glue
PerlModule PApp::Apache

# papp is configured via perl-sections.
# 1. configure papp itself (paths etc..)
#    you can use "mcookie; mcookie" to create a new cipherkey
<Perl>
   # the following is optional if you configured PApp properly,
   # so most of the following is just an example:

   #search_path PApp "/root/src/Fluffball";
   configure PApp (
      #cipherkey => "576b91d0deb7642cc764728a9d6a155f3b186f061dd769560d27e1bde5d6c9c2",
      #pappdb    => "DBI:mysql:papp",
      checkdeps => 1,
   );
</Perl>

# 2. 'mount' any applications you want into the server space
#    You can put these anywhere you can put <Location> directives
<Perl>
   mount PApp::Apache (
      location => "/bench",
      src => "apps/bench.papp"
   );
   mount PApp::Apache (
      location => "/dbedit",
      src => "apps/dbedit.papp"
   );
   mount PApp::Apache (
      location => "/poedit",
      src => "apps/poedit.papp"
   );
   mount PApp::Apache (
      location => "/acedit",
      src => "apps/acedit.papp"
   );
</Perl>

# 3. This must be at the very end of configuration. You wouldn't believe
#    it, but perl has no hook that you can use for this :( It seems the
#    only other option would be to load all applications into each server,
#    multiplying memory usage :( But Apache 2.0 will solve this problem.
<Perl>
   configured PApp;
</Perl>


